##############################
### profile settings access, can be overwritten when running the application jar,
###    java -jar -Dspring.profiles.active=docker
##############################
spring:
  profiles:
    active: development
  config:
    import: optional:file:.env[.properties]
---
##############################
### Application common settings
##############################
server:
  port: 8089
##############################
### database access
##############################
spring:
  application:
    name: backend
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      ddl: none
    show-sql: true
##############################
### logging access
##############################
logging:
  file:
    name: logs/backend.log
  level:
    nus:
      iss:
        team3:
          backend: DEBUG
---
##############################
### individual environment setup
##############################
spring:
  config:
    activate:
      on-profile: development
  datasource:
    url: jdbc:postgresql://${POSTGRES_LOCAL_IP}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://${POSTGRES_DOCKER_IP}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
---

### to look at https://www.geeksforgeeks.org/spring-boot-application-properties/ for database connection
